//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1591

using System;
using System.Collections.Generic;
using System.Linq;

using LinqToDB;
using LinqToDB.Mapping;

namespace DataModels
{
	/// <summary>
	/// Database       : Inventario
	/// Data Source    : localhost
	/// Server Version : 5.7.31-log
	/// </summary>
	public partial class InventarioDB : LinqToDB.Data.DataConnection
	{
		public ITable<Cliente>      Clientes      { get { return this.GetTable<Cliente>(); } }
		public ITable<DetalleVenta> DetalleVentas { get { return this.GetTable<DetalleVenta>(); } }
		public ITable<Empleado>     Empleados     { get { return this.GetTable<Empleado>(); } }
		public ITable<Materiale>    Materiales    { get { return this.GetTable<Materiale>(); } }
		public ITable<Producto>     Productos     { get { return this.GetTable<Producto>(); } }
		public ITable<Usuario>      Usuarios      { get { return this.GetTable<Usuario>(); } }
		public ITable<Venta>        Ventas        { get { return this.GetTable<Venta>(); } }

		public InventarioDB()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public InventarioDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext  ();
		partial void InitMappingSchema();
	}

	[Table("clientes")]
	public partial class Cliente
	{
		[Column("id"),       PrimaryKey,  NotNull] public int    Id            { get; set; } // int(11)
		[Column("cliente"),     Nullable         ] public string ClienteColumn { get; set; } // varchar(50)
		[Column("telefono"),    Nullable         ] public string Telefono      { get; set; } // varchar(8)

		#region Associations

		/// <summary>
		/// ventas_ibfk_2_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdCliente", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Venta> Ventasibfks { get; set; }

		#endregion
	}

	[Table("detalle_ventas")]
	public partial class DetalleVenta
	{
		[Column("id"),          PrimaryKey, Identity] public int  Id         { get; set; } // int(11)
		[Column("id_producto"), Nullable            ] public int? IdProducto { get; set; } // int(11)
		[Column("cantidad"),    Nullable            ] public int? Cantidad   { get; set; } // int(11)
		[Column("id_venta"),    Nullable            ] public int? IdVenta    { get; set; } // int(11)

		#region Associations

		/// <summary>
		/// detalle_ventas_ibfk_1
		/// </summary>
		[Association(ThisKey="IdVenta", OtherKey="Id", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="detalle_ventas_ibfk_1", BackReferenceName="Detalleibfks")]
		public Venta Detalleventasibfk { get; set; }

		/// <summary>
		/// detalle_ventas_ibfk_2
		/// </summary>
		[Association(ThisKey="IdProducto", OtherKey="Id", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="detalle_ventas_ibfk_2", BackReferenceName="Detalleventasibfks")]
		public Producto DetalleVentasIbfk2 { get; set; }

		#endregion
	}

	[Table("empleados")]
	public partial class Empleado
	{
		[Column("id"),       PrimaryKey,  NotNull] public string Id       { get; set; } // varchar(10)
		[Column("nombre"),      Nullable         ] public string Nombre   { get; set; } // varchar(50)
		[Column("rol"),         Nullable         ] public string Rol      { get; set; } // varchar(15)
		[Column("telefono"),    Nullable         ] public int?   Telefono { get; set; } // int(11)

		#region Associations

		/// <summary>
		/// usuarios_ibfk_1_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdEmpleado", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Usuario> Usuariosibfks { get; set; }

		/// <summary>
		/// ventas_ibfk_1_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdEmpleado", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Venta> Ventasibfks { get; set; }

		#endregion
	}

	[Table("materiales")]
	public partial class Materiale
	{
		[Column("id"),       PrimaryKey, Identity] public int    Id       { get; set; } // int(11)
		[Column("material"), Nullable            ] public string Material { get; set; } // varchar(30)
		[Column("auto"),     Nullable            ] public bool?  Auto     { get; set; } // tinyint(1)
		[Column("stock"),    Nullable            ] public int?   Stock    { get; set; } // int(11)

		#region Associations

		/// <summary>
		/// productos_ibfk_1_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="Material", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Producto> Productosibfks { get; set; }

		#endregion
	}

	[Table("productos")]
	public partial class Producto
	{
		[Column("id"),              PrimaryKey, Identity] public int     Id             { get; set; } // int(11)
		[Column("descripcion"),     Nullable            ] public string  Descripcion    { get; set; } // varchar(50)
		[Column("precio_unitario"), Nullable            ] public double? PrecioUnitario { get; set; } // double
		[Column("material"),        Nullable            ] public int?    Material       { get; set; } // int(11)

		#region Associations

		/// <summary>
		/// detalle_ventas_ibfk_2_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdProducto", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<DetalleVenta> Detalleventasibfks { get; set; }

		/// <summary>
		/// productos_ibfk_1
		/// </summary>
		[Association(ThisKey="Material", OtherKey="Id", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="productos_ibfk_1", BackReferenceName="Productosibfks")]
		public Materiale Ibfk { get; set; }

		#endregion
	}

	[Table("usuarios")]
	public partial class Usuario
	{
		[Column("usuario"),     Nullable] public string UsuarioColumn { get; set; } // varchar(30)
		[Column("contrasena"),  Nullable] public string Contrasena    { get; set; } // varchar(50)
		[Column("tipo"),        Nullable] public int?   Tipo          { get; set; } // int(11)
		[Column("id_empleado"), Nullable] public string IdEmpleado    { get; set; } // varchar(10)

		#region Associations

		/// <summary>
		/// usuarios_ibfk_1
		/// </summary>
		[Association(ThisKey="IdEmpleado", OtherKey="Id", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="usuarios_ibfk_1", BackReferenceName="Usuariosibfks")]
		public Empleado Ibfk { get; set; }

		#endregion
	}

	[Table("ventas")]
	public partial class Venta
	{
		[Column("id"),          PrimaryKey, Identity] public int       Id         { get; set; } // int(11)
		[Column("id_cliente"),  Nullable            ] public int?      IdCliente  { get; set; } // int(11)
		[Column("total"),       Nullable            ] public double?   Total      { get; set; } // double
		[Column("id_empleado"), Nullable            ] public string    IdEmpleado { get; set; } // varchar(10)
		[Column("fecha"),       Nullable            ] public DateTime? Fecha      { get; set; } // date

		#region Associations

		/// <summary>
		/// detalle_ventas_ibfk_1_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdVenta", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<DetalleVenta> Detalleibfks { get; set; }

		/// <summary>
		/// ventas_ibfk_1
		/// </summary>
		[Association(ThisKey="IdEmpleado", OtherKey="Id", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="ventas_ibfk_1", BackReferenceName="Ventasibfks")]
		public Empleado Ibfk { get; set; }

		/// <summary>
		/// ventas_ibfk_2
		/// </summary>
		[Association(ThisKey="IdCliente", OtherKey="Id", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="ventas_ibfk_2", BackReferenceName="Ventasibfks")]
		public Cliente VentasIbfk2 { get; set; }

		#endregion
	}

	public static partial class TableExtensions
	{
		public static Cliente Find(this ITable<Cliente> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static DetalleVenta Find(this ITable<DetalleVenta> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Empleado Find(this ITable<Empleado> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Materiale Find(this ITable<Materiale> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Producto Find(this ITable<Producto> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Venta Find(this ITable<Venta> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}
	}
}

#pragma warning restore 1591
